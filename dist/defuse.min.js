/* defuse - 0.1.0
 * An API to define and use JavaScript in a module-y way. And nothing else.
 * https://github.com/testdouble/defuse
 */
(function(){var a,b,c,d,e,f,g=function(a,b){return function(){return a.apply(b,arguments)}};e=this,d={defuse:e.defuse,def:e.def,use:e.use},f=e._,b=e.extend.noConflict({_:f}),b.myNamespace(c={}),a=function(){function a(){this.use=g(this.use,this),this.def=g(this.def,this)}return a.prototype.DELIMETER=/[./\\]/g,a.prototype.def=function(a,b){return this.extend(a,b)},a.prototype.use=function(a){return f(a.split(this.DELIMETER)).inject(function(a,b){return a[b]},c)},a.prototype.noConflict=function(a){return null==a&&(a={}),null!=a._&&(f=a._),f(e).extend(d),this},a.prototype.extend=function(){return c.extend.apply(this,f(arguments).toArray())},a}(),e.defuse=new a,e.def=e.defuse.def,e.use=e.defuse.use}).call(this),function(){var a,b,c,d,e,f,g=[].slice;e=this,f=e._,a=function(a){return function(){var b,e,h,i,j,k;return h=arguments[0],j=2<=arguments.length?g.call(arguments,1):[],b=h.split(/[./\\]/g),e=b.pop(),i=d(b,a),c(i[e])?(k=f(i[e])).extend.apply(k,j):i[e]=f.extend.apply(f,j)}},d=function(a,b){return f(a).reduce(function(a,b){return a[b]||(a[b]={})},b)},c=function(a){return f(a).isFunction()||!f(a).isEmpty()},b=e.extend,e.extend=a(window),e.extend.myNamespace=function(b){return b.extend=a(b)},e.extend.noConflict=function(a){var c;return null==a&&(a={}),null!=a._&&(f=a._),c=e.extend,e.extend=b,c}}.call(this);